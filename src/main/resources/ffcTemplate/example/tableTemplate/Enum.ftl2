package ${package.Consts};
/**
* <p>
    * ${introspectedTable.remarks}
    * </p>
*
*/
import java.io.Serializable;
import java.util.LinkedHashMap;
import java.util.Map;

public class ${introspectedTable.tableConfiguration.domainObjectName}Const implements Serializable {

<#-- ----------  BEGIN 字段循环遍历  ---------->
<#list introspectedTable.primaryKeyColumns as primaryKey>
    <#if field.comment!?length gt 0>
        <#if field.comment?index_of("#")!=-1 >
            /**
            * ${field.comment?substring(0,field.comment?index_of("#"))}
            **/
            public enum  ${field.name?upper_case}{

            <#assign _isNumber=(field.columnType=="INTEGER"||field.columnType=="INT"||field.columnType=="NUMBER")?string("1","0")/>
            <#assign _consts=field.comment?substring(field.comment?index_of("#")+1)/>
            <#list _consts?split(";") as item>
                <#assign _subItem = ((item?trim)?replace("|",","))?split(",") />
                <#if _subItem?size ==3>
                    <#if _isNumber=="1">
                        ${_subItem[2]}(${_subItem[0]},"${_subItem[1]}"),
                    <#else>
                        ${_subItem[2]}("${_subItem[0]}","${_subItem[1]}"),
                    </#if>

                </#if>
            </#list>
            ;
            private  ${field.propertyType}  value;

            private  String  text;

            private ${field.name?upper_case}(${field.propertyType} value, String text){
            this.value = value;
            this.text = text;
            }

            public ${field.propertyType} getValue() {
            return value;
            }

            public void setValue(${field.propertyType} value) {
            this.value = value;
            }

            public String getText() {
            return text;
            }


            public void setText(String text) {
            this.text = text;
            }

            public static Map<${field.propertyType}, String> valueMap = new LinkedHashMap<>();

            public static Map<${field.propertyType}, ${field.name?upper_case}> enumMap = new LinkedHashMap<>();

            static {

            ${field.name?upper_case}[] values = ${field.name?upper_case}.values();

            for (${field.name?upper_case} val : values) {
            valueMap.put(val.value, val.text);
            enumMap.put(val.value, val);
            }

            }
            }
        </#if>
    </#if>
</#list>
}
